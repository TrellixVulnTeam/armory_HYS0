#!/usr/bin/env python3
# coding=utf-8

import sys
import os
import subprocess
import io

import ar.protocol as proc
import repository.context as ctx


pid = str(os.getpid());


def debug(*args):
    sys.stderr.write(pid + " " + ' '.join(map(str, args)) + '\n')


# Always start with helo
proc.write_msg(sys.stdout, "helo v=1.0.0")

debug("helo")

if not os.path.exists('.armory/remote'):
    proc.write_msg(sys.stdout, "error code=1001")
    sys.exit(0)

incoming = []

while True:

    msg = proc.read_msg(sys.stdin)

    if msg.msg == 'ok':
        debug("ok")
        break
    elif msg.msg == 'push':
        debug("push")
        incoming.append(proc.Push._make(msg.params))
    else:
        # debug("error")
        proc.write_msg(sys.stdout, "error")
        sys.exit(1)

debug("accept")
proc.write_msg(sys.stdout, "accept")


reader = io.open(sys.stdin.fileno(), mode='rb', closefd=False)

for push in incoming:
    debug("@" + push.package)
    proc.read_file(reader, push.package + "-" + push.hash + ".pack", push.hash)
    debug("post-processing: army push " + push.package)
    subprocess.call(["army", "--yes", "push", "--remove", push.package + "-" + push.hash + ".pack"])